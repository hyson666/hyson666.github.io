<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HysonQAQ</title>
  <subtitle>很卑微，不努力。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-15T12:14:21.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hyson</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>斯坦福机器学习(一)单变量线性回归问题</title>
    <link href="http://yoursite.com/2017/06/15/unvariablegradient/"/>
    <id>http://yoursite.com/2017/06/15/unvariablegradient/</id>
    <published>2017-06-15T06:19:52.000Z</published>
    <updated>2017-06-15T12:14:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="约定符号"><a href="#约定符号" class="headerlink" title="约定符号"></a>约定符号</h2><p>$m —— 训练集中训练样本个个数$<br>$x’s —— 输入变量/特征量(即features，用X_i刻画样本数)$<br>$y’s —— 输出变量/约定变量$</p>
<h2 id="监督学习与回归问题"><a href="#监督学习与回归问题" class="headerlink" title="监督学习与回归问题"></a>监督学习与回归问题</h2><p>监督学习指机器能够通过使用包含特征量、已知结果的训练集训练，具备能够对问题给出“正确答案”的能力。<br>回归问题指能够机器能够对问题给出一个预计的真值输出（相对于分类问题）。</p>
<h2 id="单变量线性回归要解决的问题"><a href="#单变量线性回归要解决的问题" class="headerlink" title="单变量线性回归要解决的问题"></a>单变量线性回归要解决的问题</h2><p>$Hypothesis: h_\theta(x) = \theta_0 + \theta_1x$<br>$\theta_i’s: Parameters$<br>$How\ to\ choose\ \theta_i’s?$</p>
<h2 id="代价函数"><a href="#代价函数" class="headerlink" title="代价函数"></a>代价函数</h2><p>为了解决$\theta_0$和$\theta_1$的选择问题，使它能够很好地拟合训练集的已知数据，我们必须引入评判模型误差的手段，这就是将要说明的代价函数，即Cost Function。<br>针对前面的公式，我们现在要解决两个参数$\theta_0$和$\theta_1$的选取，而代价函数定义为：</p>
<script type="math/tex; mode=display">
J(\theta_1,\theta_2)=\frac{1}{2m}\sum_{i=1}^{m}(h_0(x_i)-y_i)^2</script><p>可以从公式看出，其做的是计算当前<script type="math/tex">\theta_0</script>和<script type="math/tex">\theta_1</script>的确定的预测函数与精确已知值的方差。<br>我们构造模型的目标就是<script type="math/tex">\min_{\theta_0,\theta_1} J(\theta_0,\theta_1)</script><br>当仅有一个参数$\theta_1$时的代价函数图：<br><img src="https://ws1.sinaimg.cn/large/006tNbRwgy1fglwia2t55j308n081aap.jpg" alt=""><br>两个参数$\theta_0$和$\theta_1$时的代价函数<strong>立体图</strong>：<br><img src="https://ws2.sinaimg.cn/large/006tNbRwgy1fglwmjy7ovj30db0a1q6u.jpg" alt=""><br>两个参数$\theta_0$和$\theta_1$时的代价函数<strong>轮廓图</strong>：<br><img src="https://ws2.sinaimg.cn/large/006tNbRwgy1fglwoswiluj30cn0bxq7i.jpg" alt=""><br>其最中心点就是为局部最优点取值对应的点位。</p>
<h2 id="梯度下降法"><a href="#梯度下降法" class="headerlink" title="梯度下降法"></a>梯度下降法</h2><p>梯度下降法能通过下山得到问题的一个最优解，其大多数情况是局部最优解，不一定为全局最优解。<br>梯度下降法的算法方程如下:</p>
<script type="math/tex; mode=display">
\begin{align*} \text{repeat until convergence: } \lbrace & \newline
\theta_j := \theta_j - \alpha\frac{\partial }{\partial \theta_j}J(\theta_0,\theta_1)  \newline\rbrace& \end{align*}</script><p>公式中的$\theta_0$和$\theta_1$的每次更新都是同步的，写代码的时候不能够拆分成先后写，这样有时虽然也可能得到正确结果，但也可能导致不可预知的错误。<br>正确的同步更新写法可以写为：</p>
<script type="math/tex; mode=display">
\begin{align}
temp_0 := \theta_0 - \frac{\partial }{\partial \theta_0}J(\theta_0,\theta_1)\\
temp_1 := \theta_0 - \frac{\partial }{\partial \theta_1}J(\theta_0,\theta_1)\\
\theta_0 := temp_0\\
\theta_1 := temp_1\\
\end{align}</script><p>梯度下降(也称下山）图解：<br><img src="https://ws4.sinaimg.cn/large/006tNbRwgy1fglx7z9ztyj30ff07tjus.jpg" alt=""><br>注意，其中:<br>$\alpha$ —— 学习速率(即learning rate)，其决定了下山的步子迈多大，如果$\alpha$大的话说明迈的是大步子，其收敛速度快，但是如果过快的话会导致无法收敛的问题,而$\alpha$选取过小的话又会导致收敛速度过慢的问题。</p>
<h2 id="学习速率的选取"><a href="#学习速率的选取" class="headerlink" title="学习速率的选取"></a>学习速率的选取</h2><p><img src="https://ws4.sinaimg.cn/large/006tNbRwgy1fglxmaiymkj30hy09xdh9.jpg" alt=""><br>由图可以得出如下结论：<br>1.如果$\alpha$选取过小，则下降会非常缓慢，迟迟无法收敛。<br>2.如果$\alpha$选取过小，则步子过大会迈过最优点不断迭代发散导致振荡、溢出，得不到最优解。<br>为了选择最佳的学习速率，我们可以通过Octave画图观察不同迭代速率收敛的速度来选取，若每次迭代代价函数的值都在下降，即单调递减，再次基础上保证循环次数最少，即是我们想要的$\alpha$值。<br>尝试$\alpha$的时候可以从0.01、0.03、0.1、0.3、1……来进行粗调，再进行微调即可。</p>
<h2 id="单变量线性回归的梯度下降法运用"><a href="#单变量线性回归的梯度下降法运用" class="headerlink" title="单变量线性回归的梯度下降法运用"></a>单变量线性回归的梯度下降法运用</h2><p>对前面的代价公式求导后，得到算法流程如下：</p>
<script type="math/tex; mode=display">
\begin{align*} \text{repeat until convergence: } \lbrace & \newline \theta_0 := & \theta_0 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}(h_\theta(x_{i}) - y_{i}) \newline \theta_1 := & \theta_1 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}\left((h_\theta(x_{i}) - y_{i}) x_{i}\right) \newline \rbrace& \end{align*}</script><p>注意，实现时一定要避免使用for循环结构，直接利用向量化解决问题会使得算法效率极大提高。<br>在变量$x$的矩阵当中，一定要记得添加一列全为1的<script type="math/tex">X_{0}</script>伴随矩阵于最左边。所以我们可以得到$X * \theta = h_{\theta}(x)$，其中X为特征矩阵。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>至此，单变量线性回归问题的知识点全部介绍完，利用训练集求出的参数值就可以把模型应用于解决实际问题，它是之后多变量线性回归（多于一个特征值）的基础，需要牢固掌握，以及能够熟练编写代码解决实际问题。同时要注意编写程序的时候一定要应用向量化提高代码的执行效率，这需要对线性代数知识有扎实的基础。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;约定符号&quot;&gt;&lt;a href=&quot;#约定符号&quot; class=&quot;headerlink&quot; title=&quot;约定符号&quot;&gt;&lt;/a&gt;约定符号&lt;/h2&gt;&lt;p&gt;$m —— 训练集中训练样本个个数$&lt;br&gt;$x’s —— 输入变量/特征量(即features，用X_i刻画样本数)$&lt;b
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="梯度下降法" scheme="http://yoursite.com/tags/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>USACO 1.2 Milking Cows</title>
    <link href="http://yoursite.com/2017/06/12/12milking/"/>
    <id>http://yoursite.com/2017/06/12/12milking/</id>
    <published>2017-06-11T16:34:37.000Z</published>
    <updated>2017-06-11T16:45:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://train.usaco.org/usacoprob2?a=ONvqe5bkAcm&amp;S=milk2" target="_blank" rel="external">http://train.usaco.org/usacoprob2?a=ONvqe5bkAcm&amp;S=milk2</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Three farmers rise at 5 am each morning and head for the barn to milk three cows. The first farmer begins milking his cow at time 300 (measured in seconds after 5 am) and ends at time 1000. The second farmer begins at time 700 and ends at time 1200. The third farmer begins at time 1500 and ends at time 2100. The longest continuous time during which at least one farmer was milking a cow was 900 seconds (from 300 to 1200). The longest time no milking was done, between the beginning and the ending of all milking, was 300 seconds (1500 minus 1200).</p>
<p>Your job is to write a program that will examine a list of beginning and ending times for N (1 &lt;= N &lt;= 5000) farmers milking N cows and compute (in seconds):</p>
<p>The longest time interval at least one cow was milked.<br>The longest time interval (after milking starts) during which no cows were being milked.</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>Line 1:    The single integer, N<br>Lines 2..N+1:    Two non-negative integers less than 1,000,000, respectively the starting and ending time in seconds after 0500</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>A single line with two integers that represent the longest continuous time of milking and the longest idle time.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3<br>300 1000<br>700 1200<br>1500 2100</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>900 300</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给出每头牛的工作时间段，输出最长至少一头牛的工作时间长度以及最长没有妞工作的时间长度。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>时间按开始时间早晚排序，用cur维护当前最长的从头到尾的时间段，若开始时间在cur的结束时间之前，且当前时间段的结束时间&gt;cur的结束时间，则更新cur的结束时间为当前时间的结束时间，否则如果当前时间段开始时间&gt;=cur的结束时间，而且结束时间&gt;=cur的结束时间，说明这个时间段在cur之外，则维护tnomilk的值和tmilk的值，且令这个时间段成为cur。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"> ID: hyson601</div><div class="line"> PROG: milk2</div><div class="line"> LANG: C++11</div><div class="line"> */</div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e4</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> nmilking,tmilk,tnomilk,t;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></div><div class="line">    <span class="keyword">int</span> begin;</div><div class="line">    <span class="keyword">int</span> end;</div><div class="line">    <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt;(node a,node b)&#123;</div><div class="line">        <span class="keyword">return</span> a.begin&lt;b.begin;</div><div class="line">    &#125;</div><div class="line">&#125;milking[maxn],cur;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(<span class="string">"milk2.in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</div><div class="line">    freopen(<span class="string">"milk2.out"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;nmilking);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nmilking;++i)</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;milking[i].begin,&amp;milking[i].end);</div><div class="line">    sort(milking,milking+nmilking);</div><div class="line">    tmilk=<span class="number">0</span>,tnomilk=<span class="number">0</span>;</div><div class="line">    cur=milking[<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nmilking;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(milking[i].begin&gt;cur.end)&#123;</div><div class="line">            t=milking[i].begin-cur.end;</div><div class="line">            <span class="keyword">if</span>(t&gt;tnomilk)</div><div class="line">            tnomilk=t;</div><div class="line">            t=cur.end-cur.begin;</div><div class="line">            <span class="keyword">if</span>(t&gt;tmilk)</div><div class="line">            tmilk=t;</div><div class="line">            cur=milking[i];</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">if</span>(milking[i].end&gt;cur.end)</div><div class="line">            cur.end=milking[i].end;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    t=cur.end-cur.begin;</div><div class="line">    <span class="keyword">if</span>(t&gt;tmilk)</div><div class="line">    tmilk=t;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,tmilk,tnomilk);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://train.usaco.org/usacoprob2?a=ONvqe5bkAcm&amp;amp;S
    
    </summary>
    
      <category term="其他 水题" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96-%E6%B0%B4%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>在Hexo中渲染MathJax数学公式</title>
    <link href="http://yoursite.com/2017/06/10/MathJax/"/>
    <id>http://yoursite.com/2017/06/10/MathJax/</id>
    <published>2017-06-10T11:34:20.000Z</published>
    <updated>2017-06-10T13:28:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>  最近在学习机器学习，课堂笔记中免不了有大量的数学公式，为了避免截图的麻烦，学习了用MathJax来渲染数学公式。Hexo完美地支持了MathJax的使用，但是由于渲染引擎的问题，默认情况下会出现不渲染的问题。</p>
<h2 id="原因（引自推酷作者ShallowLearner）"><a href="#原因（引自推酷作者ShallowLearner）" class="headerlink" title="原因（引自推酷作者ShallowLearner）"></a>原因（引自推酷作者ShallowLearner）</h2><p>Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签，比如在markdown语法中，下划线’_’代表斜体，会被渲染引擎处理为<em>标签。</em></p>
<p>因为类Latex格式书写的数学公式下划线 ‘_’ 表示下标，有特殊的含义，如果被强制转换为&lt;\em&gt;标签，那么MathJax引擎在渲染数学公式的时候就会出错。例如，$x_i$在开始被渲染的时候，处理为\$x&lt;\em&gt;i&lt;/em&gt;$，这样MathJax引擎就认为该公式有语法错误，因为不会渲染。</p>
<p>类似的语义冲突的符号还包括’*’, ‘{‘, ‘}’, ‘\’等。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>可以更换渲染引擎为<a href="https://github.com/sun11/hexo-renderer-kramed" target="_blank" rel="external">hexo-renderer-kramed</a>，其修复了默认引擎的一些Bug，能够更好地渲染MathJax公式而避免转义的麻烦。<br>安装过程如下：</p>
<blockquote>
<p>npm uninstall hexo-renderer-marked —save<br>npm install hexo-renderer-kramed —save</p>
</blockquote>
<h2 id="在主题中开启MathJax开关"><a href="#在主题中开启MathJax开关" class="headerlink" title="在主题中开启MathJax开关"></a>在主题中开启MathJax开关</h2><p>打开主题的 _config.yml 文件，如下片段：</p>
<blockquote>
<p># MathJax Support<br>mathjax:<br>  enable: flase<br>  per_page: false<br>  cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</p>
</blockquote>
<p>修改两个false值为true即可打开MathJax的支持。<br>此外为了提高访问速度，MathJax并不是全局打开的，要在需要使用MathJax的文章Front-matter打开开关才可以使用，格式如下：</p>
<blockquote>
<p>-—<br>title: index.html<br>date: 2017-12-28 2017-06-10 19:34:20<br>tags:<br>mathjax: true<br>-—</p>
</blockquote>
<h2 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h2><p>输入如下的LaTeX公式：</p>
<blockquote>
<p>$$<br>J(\theta<em>1,\theta_2)=\frac{1}{2m}\sum</em>{i=1}^{m}(\widehat{y<em>i}-y_i)^2 = \frac{1}{2m}\sum</em>{i=1}^{m}(h_0(x_i)-y_i)^2<br>$$</p>
</blockquote>
<p>即可渲染为：</p>
<script type="math/tex; mode=display">
J(\theta_1,\theta_2)=\frac{1}{2m}\sum_{i=1}^{m}(\widehat{y_i}-y_i)^2 = \frac{1}{2m}\sum_{i=1}^{m}(h_0(x_i)-y_i)^2</script><p>此外，如果你不熟悉MathJax的语法，可以借助下列网站来帮助你生成LaTeX代码：<br><a href="http://latex.codecogs.com/eqneditor/editor.php" target="_blank" rel="external">http://latex.codecogs.com/eqneditor/editor.php</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  最近在学习机器学习，课堂笔记中免不了有大量的数学公式，为了避免截图的麻烦，学习了用MathJax来渲染数学公式。Hexo完美地支持了MathJax的使用，但是由于渲染引擎的问题，默认情况下会出现不渲染的问题。&lt;/p&gt;
&lt;h2 id=&quot;原因（引自推酷作者ShallowLe
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="MathJax" scheme="http://yoursite.com/tags/MathJax/"/>
    
  </entry>
  
  <entry>
    <title>USACO 1.1 Broken Necklace</title>
    <link href="http://yoursite.com/2017/05/28/11necklace/"/>
    <id>http://yoursite.com/2017/05/28/11necklace/</id>
    <published>2017-05-28T03:59:42.000Z</published>
    <updated>2017-05-28T04:08:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://train.usaco.org/usacoprob2?a=XoNUWPzYQSw&amp;S=beads" target="_blank" rel="external">http://train.usaco.org/usacoprob2?a=XoNUWPzYQSw&amp;S=beads</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>You have a necklace of N red, white, or blue beads (3&lt;=N&lt;=350) some of which are red, others blue, and others white, arranged at random. Here are two examples for n=29:</p>
<pre><code>            1 2                               1 2
        r b b r                           b r r b
      r         b                       b         b
     r           r                     b           r
    r             r                   w             r
   b               r                 w               w
  b                 b               r                 r
  b                 b               b                 b
  b                 b               r                 b
   r               r                 b               r
    b             r                   r             r
     b           r                     r           r
       r       r                         r       b
         r b r                             r r w
        Figure A                         Figure B
                    r red bead
                    b blue bead
                    w white bead
</code></pre><p>The beads considered first and second in the text that follows have been marked in the picture.</p>
<p>The configuration in Figure A may be represented as a string of b’s and r’s, where b represents a blue bead and r represents a red one, as follows: brbrrrbbbrrrrrbrrbbrbbbbrrrrb .</p>
<p>Suppose you are to break the necklace at some point, lay it out straight, and then collect beads of the same color from one end until you reach a bead of a different color, and do the same for the other end (which might not be of the same color as the beads collected before this).</p>
<p>Determine the point where the necklace should be broken so that the most number of beads can be collected.</p>
<p>Example</p>
<p>For example, for the necklace in Figure A, 8 beads can be collected, with the breaking point either between bead 9 and bead 10 or else between bead 24 and bead 25.</p>
<p>In some necklaces, white beads had been included as shown in Figure B above. When collecting beads, a white bead that is encountered may be treated as either red or blue and then painted with the desired color. The string that represents this configuration can include any of the three symbols r, b and w.</p>
<p>Write a program to determine the largest number of beads that can be collected from a supplied necklace.</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>Line 1:    N, the number of beads<br>Line 2:    a string of N characters, each of which is r, b, or w</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>A single line containing the maximum of number of beads that can be collected from the supplied necklace.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>29<br>wwwbbrwrbrbrrbrbrwrwwrbwrwrrb</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>11</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>从某一个端点断开项链，然后从断开的两端数珠子，直到第一个与数的珠子颜色不同的珠子，停止计数。其中W颜色可以染色成R颜色或者B颜色。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>虽然说是水题，但是这题实在是不会啊，代码写得很乱很难看啊，只能过过样例啊，只好看官方题解了，在参数多于两个的时候应该调用函数封装好，比如本题的数珠子的方向dir与断点i。还有取余的模拟环操作也要注意判断是否为负，为负加一个len就可以了。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line">ID: hyson601</div><div class="line">PROG: beads</div><div class="line">LANG: C++</div><div class="line">*/</div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">char</span> s[maxn];</div><div class="line"><span class="keyword">int</span> len;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">mod</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</div><div class="line">    <span class="keyword">while</span>(n&lt;<span class="number">0</span>) n+=m;</div><div class="line">    <span class="keyword">return</span> n%m;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">tobreak</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> dir)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">if</span>(dir&gt;<span class="number">0</span>) i=p;</div><div class="line">    <span class="keyword">else</span> i=mod(p<span class="number">-1</span>,len);</div><div class="line">    <span class="keyword">char</span> color=<span class="string">'w'</span>;</div><div class="line">    <span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;len;i=mod(i+dir,len))&#123;</div><div class="line">        <span class="keyword">if</span>(color==<span class="string">'w'</span> &amp;&amp; s[i]!=<span class="string">'w'</span>)</div><div class="line">            color=s[i];</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(color!=s[i] &amp;&amp; s[i]!=<span class="string">'w'</span>)</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        ++n;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> n;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(<span class="string">"beads.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    freopen(<span class="string">"beads.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;len);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</div><div class="line">    <span class="keyword">int</span> n,m=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;++i)&#123;</div><div class="line">        n=tobreak(i,<span class="number">1</span>)+tobreak(i,<span class="number">-1</span>);</div><div class="line">        <span class="keyword">if</span>(n&gt;m) m=n;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(m&gt;len) m=len;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,m);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://train.usaco.org/usacoprob2?a=XoNUWPzYQSw&amp;amp;S
    
    </summary>
    
      <category term="其他 水题" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96-%E6%B0%B4%E9%A2%98/"/>
    
    
      <category term="AD HOC" scheme="http://yoursite.com/tags/AD-HOC/"/>
    
  </entry>
  
  <entry>
    <title>省赛之后的训练计划</title>
    <link href="http://yoursite.com/2017/05/25/plan525/"/>
    <id>http://yoursite.com/2017/05/25/plan525/</id>
    <published>2017-05-25T06:43:54.000Z</published>
    <updated>2017-05-25T06:54:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>鉴于之前所学的算法知识比较零碎，省赛后要做的就是把所学的算法再次巩固一遍，更加深入地去理解每一个算法不要依赖板子，USACO显然是一个个比较好的选择，之后会针对USACO的课程来进行科学的刷题，并且继续提高自己的手速，将会涵盖的算法内容如下：</p>
<p>Dynamic Programming<br>Greedy<br>Complete Search<br>Flood Fill<br>Shortest Path<br>Recursive Search Techniques<br>Minimum Spanning Tree<br>Knapsack<br>Computational Geometry<br>Network Flow<br>Eulerian Path<br>Two-Dimensional Convex Hull<br>BigNums<br>Heuristic Search<br>Approximate Search<br>Ad Hoc Problems</p>
<p>将会采用USACO+白书+SPOJ的训练模式，为之后刷紫书做铺垫。<br>此外以后的每一场CodeForces仍然会坚持打，坚持补题。<br>新旅途开始，加油！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;鉴于之前所学的算法知识比较零碎，省赛后要做的就是把所学的算法再次巩固一遍，更加深入地去理解每一个算法不要依赖板子，USACO显然是一个个比较好的选择，之后会针对USACO的课程来进行科学的刷题，并且继续提高自己的手速，将会涵盖的算法内容如下：&lt;/p&gt;
&lt;p&gt;Dynamic 
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>POJ2409 Power Strings - KMP裸题</title>
    <link href="http://yoursite.com/2017/05/18/POJ2409/"/>
    <id>http://yoursite.com/2017/05/18/POJ2409/</id>
    <published>2017-05-18T02:27:30.000Z</published>
    <updated>2017-05-18T02:56:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://poj.org/problem?id=2406" target="_blank" rel="external">http://poj.org/problem?id=2406</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given two strings a and b we define a<em>b to be their concatenation. For example, if a = “abc” and b = “def” then a</em>b = “abcdef”. If we think of concatenation as multiplication, exponentiation by a non-negative integer is defined in the normal way: a^0 = “” (the empty string) and a^(n+1) = a*(a^n).</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>Each test case is a line of input representing s, a string of printable characters. The length of s will be at least 1 and will not exceed 1 million characters. A line containing a period follows the last test case.</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>For each s you should print the largest n such that s = a^n for some string a.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>abcd<br>aaaa<br>ababab<br>.</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>1<br>4<br>3</p>
<h2 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h2><p>This problem has huge input, use scanf instead of cin to avoid time limit exceed.</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>寻找最小循环节，并求循环次数。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>其实寒假做过这种求最小循环节的题，但是太久没有摸过KMP忘记了Next数组怎么操作，特地复习了一遍。简单的说，Next数组可以在模式串和原串失配的时候返回一个前缀和后缀相等的最大位置，而且这个过程是可以递归的。在串中某个循环节不断重复的过程中其实next数组已经记录了最大的滑动位置，所以最后要得到的结果为s[next[len]]s[next[len]+1]……s[len-1]。如果其长度能够被串本身长度整除，说明它存在不是它本身的子串，否则自己就是长度最大子串，返回1。</p>
<p>Tips:字符串ababab的Next数组值为-1,0,0,1,2,3,4。<br>字符串abaabcac的Next数组值为-1,0,0,1,1,2,0,1。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">char</span> s[maxn];</div><div class="line"><span class="keyword">int</span> Next[maxn];</div><div class="line"><span class="keyword">int</span> len;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_next</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">-1</span>;</div><div class="line">    Next[<span class="number">0</span>]=<span class="number">-1</span>;</div><div class="line">    <span class="keyword">while</span>(i&lt;=len)&#123;</div><div class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span> || (i&lt;len &amp;&amp; s[i]==s[j]))&#123;</div><div class="line">            Next[++i]=++j;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            j=Next[j];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s) &amp;&amp; <span class="built_in">strcmp</span>(s,<span class="string">"."</span>)!=<span class="number">0</span>)&#123;</div><div class="line">        len=<span class="built_in">strlen</span>(s);</div><div class="line">        get_next(s);</div><div class="line">        <span class="keyword">if</span>(len%(len-Next[len])==<span class="number">0</span>)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,len/(len-Next[len]));</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="built_in">puts</span>(<span class="string">"1"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2406&quot; target=&quot;_blank&quot; rel=&quot;
    
    </summary>
    
    
      <category term="KMP" scheme="http://yoursite.com/tags/KMP/"/>
    
  </entry>
  
  <entry>
    <title>POJ3624 Charm Bracelet - 01背包</title>
    <link href="http://yoursite.com/2017/05/17/POJ3624/"/>
    <id>http://yoursite.com/2017/05/17/POJ3624/</id>
    <published>2017-05-17T00:49:08.000Z</published>
    <updated>2017-05-17T00:56:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Bessie has gone to the mall’s jewelry store and spies a charm bracelet. Of course, she’d like to fill it with the best charms possible from the N (1 ≤ N ≤ 3,402) available charms. Each charm i in the supplied list has a weight Wi (1 ≤ Wi ≤ 400), a ‘desirability’ factor Di (1 ≤ Di ≤ 100), and can be used at most once. Bessie can only support a charm bracelet whose weight is no more than M (1 ≤ M ≤ 12,880).</p>
<p>Given that weight limit as a constraint and a list of the charms with their weights and desirability rating, deduce the maximum possible sum of ratings.</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><ul>
<li>Line 1: Two space-separated integers: N and M</li>
<li>Lines 2..N+1: Line i+1 describes charm i with two space-separated integers: Wi and Di <h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2></li>
<li>Line 1: A single integer that is the greatest sum of charm desirabilities that can be achieved given the weight constraints</li>
</ul>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4 6<br>1 4<br>2 6<br>3 12<br>2 7</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>23</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>买珠宝，每个珠宝都有一个魅力值，但是也有重量，要求允许重量不满情况下取得的最大魅力值为多少。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>典型的01背包问题，一维状态转移方程为F[v]=max{F[v],F[v-Ci]+Wi}。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">150000</span>;</div><div class="line"><span class="keyword">int</span> f[maxn],w[maxn],d[maxn];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(<span class="string">"in.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    <span class="keyword">int</span> n,m;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;w[i],&amp;d[i]);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;=w[i];--j)</div><div class="line">            f[j]=max(f[j],f[j-w[i]]+d[i]);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[m]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="动态规划 背包DP" scheme="http://yoursite.com/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E8%83%8C%E5%8C%85DP/"/>
    
    
      <category term="01背包" scheme="http://yoursite.com/tags/01%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>BZOJ4010 菜肴制作 - 拓补排序</title>
    <link href="http://yoursite.com/2017/05/16/BZOJ4010/"/>
    <id>http://yoursite.com/2017/05/16/BZOJ4010/</id>
    <published>2017-05-16T13:36:23.000Z</published>
    <updated>2017-05-16T13:56:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>知名美食家小 A被邀请至ATM 大酒店，为其品评菜肴。<br>ATM 酒店为小 A 准备了 N 道菜肴，酒店按照为菜肴预估的质量从高到低给予<br>1到N的顺序编号，预估质量最高的菜肴编号为1。由于菜肴之间口味搭配的问题，<br>某些菜肴必须在另一些菜肴之前制作，具体的，一共有 M 条形如“i 号菜肴‘必须’<br>先于 j 号菜肴制作”的限制，我们将这样的限制简写为<i,j>。现在，酒店希望能求<br>出一个最优的菜肴的制作顺序，使得小 A能尽量先吃到质量高的菜肴：也就是说，<br>(1)在满足所有限制的前提下，1 号菜肴“尽量”优先制作；(2)在满足所有限制，1<br>号菜肴“尽量”优先制作的前提下，2号菜肴“尽量”优先制作；(3)在满足所有限<br>制，1号和2号菜肴“尽量”优先的前提下，3号菜肴“尽量”优先制作；(4)在满<br>足所有限制，1 号和 2 号和 3 号菜肴“尽量”优先的前提下，4 号菜肴“尽量”优<br>先制作；(5)以此类推。<br>例1：共4 道菜肴，两条限制<3,1>、<4,1>，那么制作顺序是 3,4,1,2。例2：共<br>5道菜肴，两条限制<5,2>、 <4,3>，那么制作顺序是 1,5,2,4,3。例1里，首先考虑 1，<br>因为有限制<3,1>和<4,1>，所以只有制作完 3 和 4 后才能制作 1，而根据(3)，3 号<br>又应“尽量”比 4 号优先，所以当前可确定前三道菜的制作顺序是 3,4,1；接下来<br>考虑2，确定最终的制作顺序是 3,4,1,2。例 2里，首先制作 1是不违背限制的；接<br>下来考虑 2 时有<5,2>的限制，所以接下来先制作 5 再制作 2；接下来考虑 3 时有</5,2></4,1></3,1></4,3></5,2></4,1></3,1></i,j></p>
<p><4,3>的限制，所以接下来先制作 4再制作 3，从而最终的顺序是 1,5,2,4,3。<br>现在你需要求出这个最优的菜肴制作顺序。无解输出“Impossible!” （不含引号，<br>首字母大写，其余字母小写） </4,3></p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>第一行是一个正整数D，表示数据组数。<br>接下来是D组数据。<br>对于每组数据：<br>第一行两个用空格分开的正整数N和M，分别表示菜肴数目和制作顺序限<br>制的条目数。<br>接下来M行，每行两个正整数x,y，表示“x号菜肴必须先于y号菜肴制作”<br>的限制。（注意：M条限制中可能存在完全相同的限制） </p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>输出文件仅包含 D 行，每行 N 个整数，表示最优的菜肴制作顺序，或<br>者”Impossible!”表示无解（不含引号）。 </p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3 </p>
<p>5 4 </p>
<p>5 4 </p>
<p>5 3 </p>
<p>4 2 </p>
<p>3 2 </p>
<p>3 3 </p>
<p>1 2 </p>
<p>2 3 </p>
<p>3 1 </p>
<p>5 2 </p>
<p>5 2 </p>
<p>4 3 </p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>1 5 3 4 2 </p>
<p>Impossible! </p>
<p>1 5 2 4 3 </p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给出若干种品尝菜肴先后顺序的限制，输出一个合法的品尝序列，并且要求在此基础上字典序最小。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>题目可以转化为求拓补序列的问题，同时要求按照尽量小的字典序来输出，显然进行拓补排序的时候可以使用优先队列来维护入队的点。为了保证无限制时按照字典序输出，仅仅使用最小值优先的优先队列是不够的，以为其后连边可能破坏字典序的结构，我们可以转变下思想反向连边，然后用最大值优先的优先队列来维护点，这样拓补序列总会令最大的靠前，再反向输出就可以得到正确的结果。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bitset&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;list&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;deque&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1000000000</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">10</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n,m,id;</div><div class="line"><span class="keyword">int</span> du[maxn],L[maxn],head[maxn];</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></div><div class="line">    <span class="keyword">int</span> from,to,next;</div><div class="line">&#125;e[maxn];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">    id=<span class="number">0</span>;</div><div class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span> head);</div><div class="line">    <span class="built_in">memset</span>(du,<span class="number">0</span>,<span class="keyword">sizeof</span> du);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">    e[id].from=u;</div><div class="line">    e[id].to=v;</div><div class="line">    e[id].next=head[u];</div><div class="line">    head[u]=id++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    freopen(<span class="string">"in.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</div><div class="line">    <span class="keyword">int</span> d;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d);</div><div class="line">    <span class="keyword">while</span>(d--)&#123;</div><div class="line">        init();</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">        <span class="keyword">int</span> u,v;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</div><div class="line">            addEdge(v,u);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=head[i];j!=<span class="number">-1</span>;j=e[j].next)</div><div class="line">                du[e[j].to]++;</div><div class="line">        <span class="keyword">int</span> tot=<span class="number">0</span>;</div><div class="line">        priority_queue&lt;<span class="keyword">int</span>&gt; Q;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">            <span class="keyword">if</span>(!du[i]) Q.push(i);</div><div class="line">        <span class="keyword">while</span>(!Q.empty())&#123;</div><div class="line">            <span class="keyword">int</span> x=Q.top();Q.pop();</div><div class="line">            L[tot++]=x;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=head[x];j!=<span class="number">-1</span>;j=e[j].next)&#123;</div><div class="line">                <span class="keyword">int</span> t=e[j].to;</div><div class="line">                du[t]--;</div><div class="line">                <span class="keyword">if</span>(!du[t])</div><div class="line">                    Q.push(t);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(tot==n)&#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%d "</span>,L[i]);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"Impossible!\n"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">     <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="拓补排序" scheme="http://yoursite.com/categories/%E6%8B%93%E8%A1%A5%E6%8E%92%E5%BA%8F/"/>
    
    
      <category term="拓补排序" scheme="http://yoursite.com/tags/%E6%8B%93%E8%A1%A5%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 21D - Array Division 二分</title>
    <link href="http://yoursite.com/2017/05/16/EDU21D/"/>
    <id>http://yoursite.com/2017/05/16/EDU21D/</id>
    <published>2017-05-16T11:07:18.000Z</published>
    <updated>2017-05-16T11:17:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://codeforces.com/contest/808/problem/D" target="_blank" rel="external">http://codeforces.com/contest/808/problem/D</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Vasya has an array a consisting of positive integer numbers. Vasya wants to divide this array into two non-empty consecutive parts (the prefix and the suffix) so that the sum of all elements in the first part equals to the sum of elements in the second part. It is not always possible, so Vasya will move some element before dividing the array (Vasya will erase some element and insert it into an arbitrary position).</p>
<p><em>Inserting an element in the same position he was erased from is also considered moving.</em></p>
<p>Can Vasya divide the array after choosing the right element to move and its new position?</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>The first line contains single integer n (1 ≤ n ≤ 100000) — the size of the array.</p>
<p>The second line contains n integers a1, a2… an (1 ≤ ai ≤ 109) — the elements of the array.</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>Print YES if Vasya can divide the array after moving one element. Otherwise print NO.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3<br>1 3 2</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>YES</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>能否只移动一个元素使数组可以分开为前后缀和相等的两半？</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>容易知道两半的和一定为tot/2，那么现在问题转化为能否移动一个元素使得前缀or后缀的和等于tot/2（此时另一半也为tot/2）。枚举移动的元素，正向二分一次判断插前，逆向二分一次判断插后即可。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bitset&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;list&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;deque&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1000000000</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">10</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> a[maxn];</div><div class="line">ll s[maxn];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    ll tot=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) &#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</div><div class="line">        tot += a[i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(tot%<span class="number">2</span>!=<span class="number">0</span> || n==<span class="number">1</span>)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    tot/=<span class="number">2</span>;</div><div class="line">    s[<span class="number">0</span>]=a[<span class="number">0</span>];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;++i)&#123;</div><div class="line">        s[i]=s[i<span class="number">-1</span>]+a[i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(a[i]==tot)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> l=<span class="number">0</span>,r=i<span class="number">-1</span>;</div><div class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">            <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">            ll temp=s[mid]+a[i];</div><div class="line">            <span class="keyword">if</span>(temp==tot)&#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(temp&lt;tot)  l=mid+<span class="number">1</span>;</div><div class="line">            <span class="keyword">else</span> r=mid<span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">        l=i+<span class="number">1</span>,r=n;</div><div class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">            <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">            ll temp=s[n]-s[mid]+a[i];</div><div class="line">            <span class="keyword">if</span>(temp==tot)&#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(temp&lt;tot) r=mid<span class="number">-1</span>;</div><div class="line">            <span class="keyword">else</span> l=mid+<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/contest/808/problem/D&quot; target=&quot;
    
    </summary>
    
      <category term="其他 二分" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96-%E4%BA%8C%E5%88%86/"/>
    
    
      <category term="二分" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>ECNU3247 铁路修复计划 - 二分+MST</title>
    <link href="http://yoursite.com/2017/05/15/ECNU3247/"/>
    <id>http://yoursite.com/2017/05/15/ECNU3247/</id>
    <published>2017-05-15T02:26:11.000Z</published>
    <updated>2017-05-15T05:58:03.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://acm.ecnu.edu.cn/blog/entry/25/" target="_blank" rel="external">http://acm.ecnu.edu.cn/blog/entry/25/</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>在 A 国有很多城际铁路。这些铁路都连接两个城市（城市从 1 到 n 编号），可以双向通行，使得任意两个城市之间都由铁路网联系起来。</p>
<p>不过在一次星球大战之后，所有的铁路都经历了不同程度的损伤以至于无法通行了。由于经费紧缺，A 国政府不愿意再出资造新的铁路。对于原有的城际铁路，根据铁路的实际情况，有以下两种处理办法：</p>
<p>使用国内技术进行修复：主要针对损坏情况不是很严重的铁路。国内公司会对铁路状况进行评估，然后如实开出铁路修复的费用。<br>使用国外技术进行修复：主要针对损坏情况严重的铁路。国外公司也会对铁路情况进行评估，然后按照铁路实际修复费用的 k 倍来收费（其中 k 是一个由国外公司决定的实数，不管怎么说，优惠是不可能的，所以 k≥1）。<br>A国政府修复铁路的总预算是 M，目标是要让任意两个城市之间都能通过铁路联系起来。在预算不够且能够完成目标的条件下，显然没必要修复每一条铁路。</p>
<p>国外公司通过不知什么途径了解到了 A 国政府的总预算 M，他们现在要把 k 定下来，并且希望 k 尽可能得大。但 k 又不能太大，不然，如果 A 国政府发现无法完成任务的话，整个订单都会泡汤。</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>测试数据包含不超过 30 个测试文件。每个测试文件是单个测试点。</p>
<p>第一行是三个整数 n,m,M (2≤n≤105,n−1≤m≤min{105,n(n−1)2},1≤M≤1015)。</p>
<p>接下来 m 行，每行四个整数 ui,vi,ti,fi。表示一条城际铁路，连接着 ui 和 vi 城市，ti 表示铁路实际修复费用。fi=1 表示只能由国外公司修复，fi=0 表示由国内公司修复。(1≤ui,vi≤n,ui≠vi,1≤ti≤106,fi∈{0,1})。输入保证两个城市之间不会存在多条铁路。</p>
<p>输入保证：</p>
<p>在国外公司不乱收费 (k=1) 的情况下，使用预算能完成要求。<br>完全不使用国外技术，只使用国内技术，是不能完成目标的。</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>求 k 的最大值。输出答案与标准答案相差不超过 10−6 即判为正确。</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3 3 9<br>1 2 1 1<br>1 3 2 0<br>2 3 1 1</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>7.000000</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>修铁路，铁路是双向路，而且可以由国内国外去修理，修理费用给出，现在国外知道了国内的总预算M，希望取k倍（实数）于正常报价的价格压榨国内政府，但是这个k也不能太大，超过M的解是不可行的。已知没有国外的参与不能完成这次修复，求这个k最大的时候为多少。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>维护无向图的连通，显然可以转化为MST问题，然后贪心知道当国内政府和国外政府都取尽量小的值是符合题目要求的，所以我们可以对这个k进行二分，对边重新赋值后由大到小排序，用kruscal判断修复后的总预算是否超过M来判断这个解是否可行。（注：所补图不一定构成最小生成树，只是通过MST的思想来进行贪心。）</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> n,m,par[maxn];</div><div class="line"><span class="keyword">double</span>  M;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></div><div class="line">    <span class="keyword">int</span> u,v,f,t;</div><div class="line">    <span class="keyword">double</span> cost;</div><div class="line">&#125;edge[maxn];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        par[i]=i;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(par[x]==x)</div><div class="line">        <span class="keyword">return</span> x;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> par[x]=find(par[x]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">unite</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">    x=find(x);</div><div class="line">    y=find(y);</div><div class="line">    <span class="keyword">if</span>(x==y) <span class="keyword">return</span>;</div><div class="line">    par[x]=y;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> mid)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i) edge[i].cost=(edge[i].f ? mid*edge[i].t : edge[i].t);</div><div class="line">    sort(edge,edge+m,[](node a,node b)&#123;<span class="keyword">if</span>(a.cost==b.cost) <span class="keyword">return</span> !a.f;  <span class="keyword">return</span> a.cost&lt;b.cost;&#125;);</div><div class="line">    init(n);</div><div class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</div><div class="line">    <span class="keyword">double</span> tot=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(cnt==n<span class="number">-1</span> &amp;&amp; tot&lt;=M ) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        <span class="keyword">int</span> x=find(edge[i].u),y=find(edge[i].v);</div><div class="line">        <span class="keyword">if</span> (x!=y)&#123;</div><div class="line">            tot+=edge[i].cost;</div><div class="line">            unite(x,y);</div><div class="line">            ++cnt;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> tot&lt;=M;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%lf"</span>,&amp;n,&amp;m,&amp;M);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;edge[i].u,&amp;edge[i].v,&amp;edge[i].t,&amp;edge[i].f);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">double</span> l=<span class="number">1</span>,r=<span class="number">1e15</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> _=<span class="number">0</span>;_&lt;<span class="number">100</span>;_++)&#123;</div><div class="line">        <span class="keyword">double</span> mid=(l+r)/<span class="number">2</span>;</div><div class="line">        <span class="keyword">if</span>(check(mid)) l=mid;</div><div class="line">        <span class="keyword">else</span> r=mid;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(m==<span class="number">1</span>) r=(<span class="keyword">double</span>)M/edge[<span class="number">0</span>].t*<span class="number">1.0</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%.12f\n"</span>,r);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.ecnu.edu.cn/blog/entry/25/&quot; target=&quot;_blank
    
    </summary>
    
      <category term="图论 生成树" scheme="http://yoursite.com/categories/%E5%9B%BE%E8%AE%BA-%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
    
      <category term="MST" scheme="http://yoursite.com/tags/MST/"/>
    
  </entry>
  
  <entry>
    <title>ECNU3260 袋鼠妈妈找孩子 - DFS暴搜</title>
    <link href="http://yoursite.com/2017/05/15/ECNU3260/"/>
    <id>http://yoursite.com/2017/05/15/ECNU3260/</id>
    <published>2017-05-15T02:14:52.000Z</published>
    <updated>2017-05-15T05:57:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://acm.ecnu.edu.cn/problem/3260/" target="_blank" rel="external">http://acm.ecnu.edu.cn/problem/3260/</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>袋鼠妈妈找不到她的孩子了。她的孩子被怪兽抓走了。</p>
<p>袋鼠妈妈现在在地图的左上角，她的孩子在地图第 x 行第 y 列的位置。怪兽想和袋鼠妈妈玩一个游戏：他不想让袋鼠妈妈过快地找到她的孩子。袋鼠妈妈每秒钟可以向上下左右四个方向跳一格（如果没有墙阻拦的话），怪兽就要在一些格子中造墙，从而完成一个迷宫，使得袋鼠妈妈能够找到她的孩子，但最快不能小于 k 秒。</p>
<p>请设计这样一个迷宫。</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>第一行两个整数 n,m (1≤n,m≤8)，表示地图的总行数和总列数。</p>
<p>第二行三个整数 x,y,k (1≤x≤n,1≤y≤m,x+y&gt;1)。</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>输出一个地图，应正好 n 行 m 列。</p>
<p>用 . 表示空地，用 * 表示墙。袋鼠妈妈所在的位置和孩子所在的位置用 . 表示。</p>
<p>数据保证有解。</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>2 6<br>1 3 4</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>.<em>.**</em><br>……</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>构造一副图使从（1，1）点到终点的步数不小于k。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>地图比较小，DFS暴搜一遍即可，为了保证最后形成的是不重复走的最短路，每次搜索的时候要保证上下左右只有一个点时被访问过的。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bitset&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;list&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-6</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1000000000</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">10</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n,m,endx,endy,k;</div><div class="line"><span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</div><div class="line"><span class="keyword">char</span> g[maxn][maxn];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> step)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(x==endx &amp;&amp; y==endy &amp;&amp; step&gt;=k ) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)&#123;</div><div class="line">        <span class="keyword">int</span> tx=x+dx[i],ty=y+dy[i];</div><div class="line">        <span class="keyword">if</span>(tx&lt;<span class="number">1</span> || ty&lt;<span class="number">1</span> || tx&gt;n || ty&gt;m || g[tx][ty]==<span class="string">'.'</span>) <span class="keyword">continue</span>;</div><div class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;++j)</div><div class="line">            <span class="keyword">if</span>(g[tx+dx[j]][ty+dy[j]]==<span class="string">'.'</span>) ++cnt;</div><div class="line">        <span class="keyword">if</span>(cnt&gt;<span class="number">1</span>) <span class="keyword">continue</span>;</div><div class="line">        g[tx][ty]=<span class="string">'.'</span>;</div><div class="line">        <span class="keyword">if</span>(dfs(tx,ty,step+<span class="number">1</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        g[tx][ty]=<span class="string">'*'</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;endx,&amp;endy,&amp;k);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</div><div class="line">            g[i][j]=<span class="string">'*'</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    g[<span class="number">1</span>][<span class="number">1</span>]=<span class="string">'.'</span>;</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,g[i][j]);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.ecnu.edu.cn/problem/3260/&quot; target=&quot;_blank&quot;
    
    </summary>
    
      <category term="搜索 DFS" scheme="http://yoursite.com/categories/%E6%90%9C%E7%B4%A2-DFS/"/>
    
    
      <category term="DFS" scheme="http://yoursite.com/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>POJ3258 - River Hopscotch 二分</title>
    <link href="http://yoursite.com/2017/05/10/POJ3258/"/>
    <id>http://yoursite.com/2017/05/10/POJ3258/</id>
    <published>2017-05-09T17:26:15.000Z</published>
    <updated>2017-05-09T17:37:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://poj.org/problem?id=3258" target="_blank" rel="external">http://poj.org/problem?id=3258</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Every year the cows hold an event featuring a peculiar version of hopscotch that involves carefully jumping from rock to rock in a river. The excitement takes place on a long, straight river with a rock at the start and another rock at the end, L units away from the start (1 ≤ L ≤ 1,000,000,000). Along the river between the starting and ending rocks, N (0 ≤ N ≤ 50,000) more rocks appear, each at an integral distance Di from the start (0 &lt; Di &lt; L).</p>
<p>To play the game, each cow in turn starts at the starting rock and tries to reach the finish at the ending rock, jumping only from rock to rock. Of course, less agile cows never make it to the final rock, ending up instead in the river.</p>
<p>Farmer John is proud of his cows and watches this event each year. But as time goes by, he tires of watching the timid cows of the other farmers limp across the short distances between rocks placed too closely together. He plans to remove several rocks in order to increase the shortest distance a cow will have to jump to reach the end. He knows he cannot remove the starting and ending rocks, but he calculates that he has enough resources to remove up to M rocks (0 ≤ M ≤ N).</p>
<p>FJ wants to know exactly how much he can increase the shortest distance *before* he starts removing the rocks. Help Farmer John determine the greatest possible shortest distance a cow has to jump after removing the optimal set of M rocks.</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>Line 1: Three space-separated integers: L, N, and M<br>Lines 2..N+1: Each line contains a single integer indicating how far some rock is away from the starting rock. No two rocks share the same position.</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>Line 1: A single integer that is the maximum of the shortest distance a cow has to jump after removing M rocks</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>25 5 2<br>2<br>14<br>11<br>21<br>17</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>4</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>通过取走M块石头令最小距离最大化，问这个最大的最小距离为多少。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>有两种理解，第一种在ai位置上摆放n-m块石头，每一块石头都放得尽可能近，而且这个距离要大于mid，看能否把石子摆放完（即在最后一个位置前全部摆完），能摆放完就返回true，这样就转化成了白书上题目的变式。还有一种理解是假定C（x）是最大的最短距离，那么for一遍，如果有小于这个C（x）的情况，则通过增添石子来拓展距离（显然从前往后，由贪心思想可知是正确的），否则继续遍历下一个石子，统计删除石头的个数是否为小于等于m，因为这种情况总可以继续删除石子使最大距离大于C（x），为可行解，返回true。代码给出第一种理解。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">50000</span>+<span class="number">10</span>;</div><div class="line">ll a[maxn];</div><div class="line">ll d,n,m;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll x)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> last=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n-m;++i)&#123;</div><div class="line">        <span class="keyword">int</span> cur=last+<span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span>(cur&lt;n &amp;&amp; a[cur]-a[last]&lt;x &amp;&amp; cur-last&lt;=m)&#123;</div><div class="line">            ++cur;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(cur==n) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        last = cur;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&amp;d,&amp;n,&amp;m))&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</div><div class="line">		a[n+<span class="number">1</span>]=d;</div><div class="line">        sort(a,a+n+<span class="number">1</span>);</div><div class="line">        n+=<span class="number">1</span>;</div><div class="line">		ll l=<span class="number">1</span>,r=d+<span class="number">1</span>,mid;</div><div class="line">		<span class="keyword">while</span>(r-l&gt;<span class="number">1</span>)&#123;</div><div class="line">			mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(check(mid)) l=mid;</div><div class="line">			<span class="keyword">else</span> r=mid;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,l);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=3258&quot; target=&quot;_blank&quot; rel=&quot;
    
    </summary>
    
      <category term="其他 二分" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96-%E4%BA%8C%E5%88%86/"/>
    
    
      <category term="二分" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>POJ3104 - Drying 二分</title>
    <link href="http://yoursite.com/2017/05/10/POJ3104/"/>
    <id>http://yoursite.com/2017/05/10/POJ3104/</id>
    <published>2017-05-09T17:04:11.000Z</published>
    <updated>2017-05-09T17:25:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://poj.org/problem?id=3104" target="_blank" rel="external">http://poj.org/problem?id=3104</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>It is very hard to wash and especially to dry clothes in winter. But Jane is a very smart girl. She is not afraid of this boring process. Jane has decided to use a radiator to make drying faster. But the radiator is small, so it can hold only one thing at a time.</p>
<p>Jane wants to perform drying in the minimal possible time. She asked you to write a program that will calculate the minimal time for a given set of clothes.</p>
<p>There are n clothes Jane has just washed. Each of them took ai water during washing. Every minute the amount of water contained in each thing decreases by one (of course, only if the thing is not completely dry yet). When amount of water contained becomes zero the cloth becomes dry and is ready to be packed.</p>
<p>Every minute Jane can select one thing to dry on the radiator. The radiator is very hot, so the amount of water in this thing decreases by k this minute (but not less than zero — if the thing contains less than k water, the resulting amount of water will be zero).</p>
<p>The task is to minimize the total time of drying by means of using the radiator effectively. The drying process ends when all the clothes are dry.</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>The first line contains a single integer n (1 ≤ n ≤ 100 000). The second line contains ai separated by spaces (1 ≤ ai ≤ 109). The third line contains k (1 ≤ k ≤ 109).</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>Output a single integer — the minimal possible number of minutes required to dry all clothes.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>sample input #1<br>3<br>2 3 9<br>5</p>
<p>sample input #2<br>3<br>2 3 6<br>5</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>sample output #1<br>3</p>
<p>sample output #2<br>2</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>现在要晾衣服，已知风干的时候每分钟减少1单位的水，放干衣机每分钟可以减少k单位的水，但是每次只能放入一件，问最少时间为多少？</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>由贪心思想，在二分判断的时候应该先满足含水量最大的进入干衣机，把多出mid的部分烘干掉，由于每次只能放入一件，所以要向上取整，但是用ceil函数处理会超时，故用加上k-1再除k的技巧来进行向上取整。其余含水量小于mid的衣服全部风干即可，在for的过程中判断总用时是否超过mid，超过的话返回false。因为公式推得不对除了k错了一发，事实上是除k-1，因为假设用机器x分钟，应该有剩余时间风干量加上机器风干量等于放入机器前的水量成立，即<br><strong>kx+(mid-cur-x)=ai-cur =&gt; x=(a[i]-mid)/(k-1)</strong><br>所以要k—后进行判断，注意这个思想是没办法判断k=1的情况的，因为会RE（除0）所以一定要特判掉。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> a[maxn],n,k;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a&gt;b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll mid)</span></span>&#123;</div><div class="line">    ll crt=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(a[i]&lt;=mid) <span class="keyword">continue</span>;</div><div class="line">        crt+=(a[i]-mid+k<span class="number">-1</span>)/k;</div><div class="line">        <span class="keyword">if</span>(crt&gt;mid) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</div><div class="line">    --k;</div><div class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</div><div class="line">        <span class="keyword">int</span> MAX=<span class="number">-1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) MAX=max(MAX,a[i]);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,MAX);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        sort(a, a + n, cmp);</div><div class="line">        ll l = <span class="number">1</span>, r = <span class="number">1e10</span>;</div><div class="line">        <span class="keyword">while</span> (l &lt;= r) &#123;</div><div class="line">            ll mid = (l + r) &gt;&gt; <span class="number">1</span>;</div><div class="line">            <span class="keyword">if</span> (check(mid)) r = mid - <span class="number">1</span>;</div><div class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,l);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=3104&quot; target=&quot;_blank&quot; rel=&quot;
    
    </summary>
    
      <category term="其他 二分" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96-%E4%BA%8C%E5%88%86/"/>
    
    
      <category term="二分" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces 626 C - Block Towers 二分</title>
    <link href="http://yoursite.com/2017/05/09/626C/"/>
    <id>http://yoursite.com/2017/05/09/626C/</id>
    <published>2017-05-08T18:06:14.000Z</published>
    <updated>2017-05-09T17:05:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Students in a class are making towers of blocks. Each student makes a (non-zero) tower by stacking pieces lengthwise on top of each other. n of the students use pieces made of two blocks and m of the students use pieces made of three blocks.</p>
<p>The students don’t want to use too many blocks, but they also want to be unique, so no two students’ towers may contain the same number of blocks. Find the minimum height necessary for the tallest of the students’ towers.</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>The first line of the input contains two space-separated integers n and m (0 ≤ n, m ≤ 1 000 000, n + m &gt; 0) — the number of students using two-block pieces and the number of students using three-block pieces, respectively.</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>Print a single integer, denoting the minimum possible height of the tallest tower.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1 3</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>9</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>小朋友堆塔，一部分用2的倍数堆，另一部分用3的倍数堆，他们都希望自己的塔是独一无二的（层数不能重复），问最高的塔最小可能为多少？</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>显然的二分最小化最大值，利用了些许集合的只是。如果2的集合总数&lt;n则返回false，3的集合总数&lt;m返回false，最后还有个关键的条件是无法取得所需mid的情况，就是(l1+l2-l3)&lt;m+n的情况，即A和B集合并集中的所有数也不够m+n取到，也返回false。其余情况返回true即可。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> l1=mid/<span class="number">2</span>;</div><div class="line">	<span class="keyword">int</span> l2=mid/<span class="number">3</span>;</div><div class="line">	<span class="keyword">int</span> l3=mid/<span class="number">6</span>;</div><div class="line">	<span class="keyword">if</span>(l1&lt;n || l2&lt;m) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	<span class="keyword">if</span>(l1+l2-l3&lt;m+n) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">	<span class="keyword">int</span> l=<span class="number">0</span>,r=<span class="number">1e9</span>+<span class="number">10</span>;</div><div class="line">	<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(check(mid)) r=mid<span class="number">-1</span>;</div><div class="line">		<span class="keyword">else</span> l=mid+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,l);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="其他 二分" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96-%E4%BA%8C%E5%88%86/"/>
    
    
      <category term="二分" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 20 D.Magazine Ad 二分+贪心</title>
    <link href="http://yoursite.com/2017/05/09/EDU20D/"/>
    <id>http://yoursite.com/2017/05/09/EDU20D/</id>
    <published>2017-05-08T17:01:25.000Z</published>
    <updated>2017-05-08T17:14:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://codeforces.com/contest/803/problem/D" target="_blank" rel="external">http://codeforces.com/contest/803/problem/D</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>The main city magazine offers its readers an opportunity to publish their ads. The format of the ad should be like this:</p>
<p>There are space-separated non-empty words of lowercase and uppercase Latin letters.</p>
<p>There are hyphen characters ‘-‘ in some words, their positions set word wrapping points. Word can include more than one hyphen.</p>
<p>It is guaranteed that there are no adjacent spaces and no adjacent hyphens. No hyphen is adjacent to space. There are no spaces and no hyphens before the first word and after the last word.</p>
<p>When the word is wrapped, the part of the word before hyphen and the hyphen itself stay on current line and the next part of the word is put on the next line. You can also put line break between two words, in that case the space stays on current line. Check notes for better understanding.</p>
<p>The ad can occupy no more that k lines and should have minimal width. The width of the ad is the maximal length of string (letters, spaces and hyphens are counted) in it.</p>
<p>You should write a program that will find minimal width of the ad.</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>The first line contains number k (1 ≤ k ≤ 105).</p>
<p>The second line contains the text of the ad — non-empty space-separated words of lowercase and uppercase Latin letters and hyphens. Total length of the ad don’t exceed 106 characters.</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>Output minimal width of the ad.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4<br>garage for sa-le</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>7</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>报纸刊登广告，已知“-”和空格都是可以换行的位置，现在要求广告整理成k行，现在问长度最大的那行的长度最小可以为多少?（包含空格和“-”）</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>最近在刷二分，所以回头把上一场codeforeces的这题给补了。根据题意要最小化最大值，显然可以对猜测的结果进行二分。先把可以拆分的每一段都转化为不同长度的木板存入数组，利用贪心思想，按顺序for一遍，能够结合成为一块板子的果断结合，不能的划分数加一，处理下一块板子使它继续结合即可。如果某一块板子长度大于当前二分mid值，返回false，最后结果如果大于k，由于已经贪心了最优策略，所以是无论怎样结合也不可能符合条件划分为k个的（反之总可以随意划分到k块），返回false，其他返回true即可。1A之。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> a[maxn];</div><div class="line"><span class="keyword">int</span> k,cnt;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> num=<span class="number">1</span>,temp=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(a[i]&gt;mid) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">		<span class="keyword">if</span>(temp+a[i]&lt;=mid)&#123;</div><div class="line">			temp+=a[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			temp=a[i];</div><div class="line">			num++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(num&lt;=k) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d\n"</span>,&amp;k);</div><div class="line">	<span class="keyword">char</span> x;</div><div class="line">	<span class="keyword">int</span> temp=<span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> total=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;x) &amp;&amp; x!=<span class="string">'\n'</span>)&#123;</div><div class="line">		++temp;</div><div class="line">		<span class="keyword">if</span>(x==<span class="string">'-'</span> || x==<span class="string">' '</span>)&#123;</div><div class="line">			a[++cnt]=temp;</div><div class="line">			temp=<span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">        ++total;</div><div class="line">	&#125;</div><div class="line">	a[++cnt]=temp;</div><div class="line">	<span class="keyword">int</span> l=<span class="number">1</span>,r=total;</div><div class="line">	<span class="keyword">int</span> ans;</div><div class="line">	<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(check(mid))&#123;</div><div class="line">			ans=mid;</div><div class="line">			r=mid<span class="number">-1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> l=mid+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/contest/803/problem/D&quot; target=&quot;
    
    </summary>
    
      <category term="其他 二分" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96-%E4%BA%8C%E5%88%86/"/>
    
    
      <category term="二分" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 412 (rated, Div. 2, base on VK Cup 2017 Round 3) 题解 ABC</title>
    <link href="http://yoursite.com/2017/05/08/CF412/"/>
    <id>http://yoursite.com/2017/05/08/CF412/</id>
    <published>2017-05-08T05:25:32.000Z</published>
    <updated>2017-05-08T06:28:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>tourist神犇的场，必须熬夜打。不过打的时候非常困（前一天浪了一晚没有补睡），A题因为忘记sort属于不稳定排序WA了几发，B题没看输出要求，把unsuccessful hack也计算进去了，也WA了几发，导致罚时爆炸。C题二分，状态很差，很不熟练，当场没拍出来就滚粗睡觉了，起床看了看还好没掉分，就把C补了，发现真的是裸得不行啊，做出来至少就是前400了吧..（练习还是不够），废话不多说，上题解。</p>
<h2 id="A-Is-it-rated"><a href="#A-Is-it-rated" class="headerlink" title="A -  Is it rated?"></a>A -  Is it rated?</h2><p>题意：判定一场Codeforces是否已经结算了分数，已知道结算了分数的情况为以下两种：<br>（1）至少有一位参赛者的rate值发生了改变，一定结算了分数。<br>（2）如果有一位低rate选手排名在高rate选手之前，且有至少一名参赛者的rate发生了变化，一定结算了分数，如果没有的话，则一定没有结算分数。<br>Tips：如果排名符合降序，而且没有人分数发生改变，属于有可能结算了分数的情况。<br>题解：手速题。输入后排序，看是否满足严格降序，即index[i]==i（第一次交的时候这里排序没有写入等于的情况，排序不稳定就WA了），不满足的话则观察是否有人分数发生了变化，如果没有的话就是unrated的情况，否则就是rated，其他情况就是maybe。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></div><div class="line">	<span class="keyword">int</span> a,b,index;</div><div class="line">&#125;p[<span class="number">1050</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(a.a==b.a) <span class="keyword">return</span> a.index&lt;b.index;</div><div class="line">	<span class="keyword">return</span> a.a&gt;b.a;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> n;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">int</span> temp=n;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;p[i].a,&amp;p[i].b);</div><div class="line">		p[i].index=i;</div><div class="line">	&#125;</div><div class="line">	sort(p+<span class="number">1</span>,p+n+<span class="number">1</span>,cmp);</div><div class="line">	<span class="keyword">int</span> flag=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(p[i].index!=i)&#123;</div><div class="line">			flag=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(p[i].a!=p[i].b)&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"rated\n"</span>);</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag==<span class="number">1</span>)</div><div class="line">	   <span class="built_in">printf</span>(<span class="string">"unrated\n"</span>);</div><div class="line">	<span class="keyword">else</span></div><div class="line">	   <span class="built_in">printf</span>(<span class="string">"maybe\n"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="B-T-Shirt-Hunt"><a href="#B-T-Shirt-Hunt" class="headerlink" title="B - T-Shirt Hunt"></a>B - T-Shirt Hunt</h2><p>题意：给出你当前的分数排名p，当前分数x以及要进入下一轮必须的分数y，现在直到得到T-shirt的排名由题干给出的函数生成，为了得到T-shirt你必须让你的分数录入题干所给函数后生成的排名包含你的排名，问你最少要成功hack几次？<br>题解：应该是本场比赛最烦的题？题目本身不难，但是题干好长啊，导致最快做出来的人都用了不少时间。理解用了一点时间，理解之后就是切切切了（可惜还是把输出搞错了）。直接两次循环，一次查询最少上升rate，一次查询最少下降rate，然后计算成功hack的次数即可。注意下降的时候就不需要成功hack，而上升的时候也只需要1次失败hack。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> p,x,y;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	i=(s/<span class="number">50</span>)%<span class="number">475</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">25</span>;++j)&#123;</div><div class="line">		i=(i*<span class="number">96</span>+<span class="number">42</span>)%<span class="number">475</span>;</div><div class="line">		<span class="keyword">if</span>(p==i+<span class="number">26</span>) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;p,&amp;x,&amp;y);</div><div class="line">	<span class="keyword">int</span> cnt1=INT_MAX,cnt2=INT_MAX;</div><div class="line">	<span class="keyword">int</span> temp=x;</div><div class="line">	<span class="keyword">int</span> mark1=<span class="number">-1</span>,mark2=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">while</span>(!judge(temp))&#123;</div><div class="line">		temp+=<span class="number">50</span>;</div><div class="line">		mark1=temp;</div><div class="line">	&#125;</div><div class="line">	mark1=temp;</div><div class="line">	<span class="keyword">if</span>(judge(mark1)) cnt1=<span class="number">0</span>;</div><div class="line">	temp=x;</div><div class="line">	<span class="keyword">while</span>(mark1-temp&gt;=<span class="number">100</span> &amp;&amp; mark1 !=y)&#123;</div><div class="line">		temp+=<span class="number">100</span>;</div><div class="line">		++cnt1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(temp&lt;mark1)</div><div class="line">		cnt1++;</div><div class="line">	temp=x;</div><div class="line">	<span class="keyword">while</span>(!judge(temp) &amp;&amp; temp&gt;=y)&#123;</div><div class="line">		temp-=<span class="number">50</span>;</div><div class="line">		mark2=temp;</div><div class="line">	&#125;</div><div class="line">	mark2=temp;</div><div class="line">	<span class="keyword">if</span>(judge(mark2)) cnt2=<span class="number">0</span>;</div><div class="line">	temp=x;</div><div class="line">	<span class="keyword">if</span>(mark2&lt;y)</div><div class="line">		cnt2=INT_MAX;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,min(cnt1,cnt2));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="C-Success-Rate"><a href="#C-Success-Rate" class="headerlink" title="C - Success Rate"></a>C - Success Rate</h2><p>题意：你是个有强迫症的人，一场codeforces活动中你目前的成功率是x/y，但是你最爱的成功率是p/q，这让你很不爽，问你至少提交几次可以让你的成功率变成p/q。已知你很强，想做对就能做对，想做错就故意去做错，x是成功提交数，y是总提交数。<br>题解：妥妥的裸二分求最小值。已知答案一定是p/q的倍数，所以二分这个倍数即可。因为是求最小，所以符合条件的时候ub=mid-1，不符合条件的时候lb=mid+1。符合条件的情况指的是tq-y+x&gt;=tp,只有这样才可以从当前目标成功率取到目标成功率的倍数。此外一定要注意特判的书写,以及上限一定要足够大但是也不能太大（会迷之溢出）。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line">ll x,y,p,q;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll mid)</span></span>&#123;</div><div class="line">    ll temp_p=mid*p;</div><div class="line">    ll temp_q=mid*q;</div><div class="line">    <span class="keyword">if</span>(temp_p-x+y&lt;=temp_q &amp;&amp; temp_p&gt;=x) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</div><div class="line">    <span class="keyword">while</span>(t--)&#123;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld"</span>,&amp;x,&amp;y,&amp;p,&amp;q);</div><div class="line">        <span class="keyword">if</span>((<span class="keyword">double</span>)x/y==(<span class="keyword">double</span>)p/q)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(p==q &amp;&amp; p!=<span class="number">0</span>)&#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(x!=<span class="number">0</span> &amp;&amp; p==<span class="number">0</span> ) &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        ll lb=<span class="number">1</span>,ub=(ll)<span class="number">1e10</span>+<span class="number">7</span>,mid;</div><div class="line">        <span class="keyword">while</span>(lb&lt;=ub)&#123;</div><div class="line">            mid=(ub+lb)/<span class="number">2</span>;</div><div class="line">            <span class="keyword">if</span>(check(mid)) ub=mid<span class="number">-1</span>;</div><div class="line">            <span class="keyword">else</span> lb=mid+<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,q*lb-y);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tourist神犇的场，必须熬夜打。不过打的时候非常困（前一天浪了一晚没有补睡），A题因为忘记sort属于不稳定排序WA了几发，B题没看输出要求，把unsuccessful hack也计算进去了，也WA了几发，导致罚时爆炸。C题二分，状态很差，很不熟练，当场没拍出来就滚粗睡
    
    </summary>
    
      <category term="OnlineJudge Codeforces" scheme="http://yoursite.com/categories/OnlineJudge-Codeforces/"/>
    
    
      <category term="二分" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>POJ2566 Bound Found - 尺取法</title>
    <link href="http://yoursite.com/2017/05/04/POJ2566/"/>
    <id>http://yoursite.com/2017/05/04/POJ2566/</id>
    <published>2017-05-03T16:49:44.000Z</published>
    <updated>2017-05-03T17:03:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://poj.org/problem?id=2566" target="_blank" rel="external">http://poj.org/problem?id=2566</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Signals of most probably extra-terrestrial origin have been received and digitalized by The Aeronautic and Space Administration (that must be going through a defiant phase: “But I want to use feet, not meters!”). Each signal seems to come in two parts: a sequence of n integer values and a non-negative integer t. We’ll not go into details, but researchers found out that a signal encodes two integer values. These can be found as the lower and upper bound of a subrange of the sequence whose absolute value of its sum is closest to t. </p>
<p>You are given the sequence of n integers and the non-negative target t. You are to find a non-empty range of the sequence (i.e. a continuous subsequence) and output its lower index l and its upper index u. The absolute value of the sum of the values of the sequence from the l-th to the u-th element (inclusive) must be at least as close to t as the absolute value of the sum of any other non-empty range.</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>The input file contains several test cases. Each test case starts with two numbers n and k. Input is terminated by n=k=0. Otherwise, 1&lt;=n&lt;=100000 and there follow n integers with absolute values &lt;=10000 which constitute the sequence. Then follow k queries for this sequence. Each query is a target t with 0&lt;=t&lt;=1000000000.</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>For each query output 3 numbers on a line: some closest absolute sum and the lower and upper indices of some range where this absolute sum is achieved. Possible indices start with 1 and go up to n.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5 1<br>-10 -5 0 5 10<br>3<br>10 2<br>-9 8 -7 6 -5 4 -3 2 -1 0<br>5 11<br>15 2<br>-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1<br>15 100<br>0 0</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>5 4 4<br>5 2 8<br>9 1 1<br>15 1 15<br>15 1 15</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给定n个数字，每个样例询问k次，每次输入一个t，输出离t最近的连续数字的起点和终点。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这题显然也能通过尺取法来解决，但是问题就在于这个数串不是递增的，没办法直接爬。结合题目的问题，我们可以通过使用前缀和再排序来构造一个递增序列，这样处理之后就可以用尺取法了。注意前缀和的若干性质，一定要加入p[0]后进行排序（值为0，且为第0个位置，没有它无法相减构造出Sn）。注意Sn-Sk可以代表任意一串数，只要记得取小的作左边界，大的做右边界即可（结构体中记录位置）。这题为了使结构清晰，保留尺取模板引入函数是有必要的。另外注意前缀和中l=r是不合法的一定要排除。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//注意前缀和的性质，自己和自己减是没有意义的。</span></div><div class="line"><span class="comment">//维护答案的时候记得取绝对值。</span></div><div class="line"><span class="comment">//前缀和一定要加入0这一项，和0减才得到0~an的值，并且完全不影响答案。</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = INT_MAX;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> n,k,t;</div><div class="line"><span class="keyword">int</span> a[maxn],MINABS=inf,ansl,ansr;</div><div class="line"><span class="keyword">int</span> sum,ans;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></div><div class="line">    <span class="keyword">int</span> sum,index;</div><div class="line">&#125;p[maxn];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> a.sum&lt;b.sum;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_sum</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(l&gt;=r)</div><div class="line">        <span class="keyword">return</span> INT_MIN;  <span class="comment">//千万注意,用前缀和的时候这里相等是不合法的,会WA掉,此外返回值可以用INT_MIN来结束。</span></div><div class="line">    <span class="keyword">int</span> sum=p[r].sum-p[l].sum;</div><div class="line">    <span class="comment">//爬的同时维护答案。</span></div><div class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(t-sum)&lt;<span class="built_in">abs</span>(t-ans))&#123;</div><div class="line">        ansl=min(p[l].index,p[r].index);</div><div class="line">        ansr=max(p[l].index,p[r].index);</div><div class="line">        ans=sum;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> sum;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k))&#123;</div><div class="line">        <span class="keyword">if</span>(n==<span class="number">0</span> &amp;&amp; k==<span class="number">0</span>) <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">        &#125;</div><div class="line">        p[<span class="number">0</span>].sum=<span class="number">0</span>,p[<span class="number">0</span>].index=<span class="number">0</span>; <span class="comment">//一定要记得初始化p[0]于使用前缀和(0不影响结果）</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</div><div class="line">            p[i+<span class="number">1</span>].sum=p[i].sum+a[i];</div><div class="line">            p[i+<span class="number">1</span>].index=i+<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        sort(p,p+n+<span class="number">1</span>,cmp);</div><div class="line">        <span class="keyword">int</span> sum,l,r;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;++i)&#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</div><div class="line">            sum=<span class="number">-999999</span>,ans=<span class="number">-999999</span>;  <span class="comment">//取足够小的值即可,INT_MIN乱用会溢出。</span></div><div class="line">            l=r=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span>(;;)&#123;</div><div class="line">                <span class="keyword">while</span>(sum&lt;t &amp;&amp; r&lt;n)&#123;</div><div class="line">                    sum=get_sum(l,++r);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span>(sum&lt;t) <span class="keyword">break</span>;</div><div class="line">                sum=get_sum(++l,r);</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,ans,ansl+<span class="number">1</span>,ansr);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2566&quot; target=&quot;_blank&quot; rel=&quot;
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="尺取法" scheme="http://yoursite.com/tags/%E5%B0%BA%E5%8F%96%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>POJ3320 Jessica&#39;s Reading Problem - 尺取法</title>
    <link href="http://yoursite.com/2017/05/04/POJ3320/"/>
    <id>http://yoursite.com/2017/05/04/POJ3320/</id>
    <published>2017-05-03T16:38:34.000Z</published>
    <updated>2017-05-03T16:49:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Jessica’s a very lovely girl wooed by lots of boys. Recently she has a problem. The final exam is coming, yet she has spent little time on it. If she wants to pass it, she has to master all ideas included in a very thick text book. The author of that text book, like other authors, is extremely fussy about the ideas, thus some ideas are covered more than once. Jessica think if she managed to read each idea at least once, she can pass the exam. She decides to read only one contiguous part of the book which contains all ideas covered by the entire book. And of course, the sub-book should be as thin as possible.</p>
<p>A very hard-working boy had manually indexed for her each page of Jessica’s text-book with what idea each page is about and thus made a big progress for his courtship. Here you come in to save your skin: given the index, help Jessica decide which contiguous part she should read. For convenience, each idea has been coded with an ID, which is a non-negative integer.</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>The first line of input is an integer P (1 ≤ P ≤ 1000000), which is the number of pages of Jessica’s text-book. The second line contains P non-negative integers describing what idea each page is about. The first integer is what the first page is about, the second integer is what the second page is about, and so on. You may assume all integers that appear can fit well in the signed 32-bit integer type.</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>Output one line: the number of pages of the shortest contiguous part of the book which contains all ideals covered in the book.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5<br>1 8 8 8 1</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>2</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>男孩在复习考试，每一页里面都会有相应的一个考点，但是书上有大量重复的内容，他现在想连续地看n页使其能覆盖所有考点，问你最少连续看几页。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>显然能够通过尺取法来解决这类问题。书本的知识点存在重复的，所以我们要先去重，可以通过set容器（集合）来简单实现。此外还有知道哪些知识点涵盖到了，在尺取过程中还要动态维护已经没有涵盖到的知识点，这样又可以通过map容器（key-value匹配）来实现。当num=n时候动态更新答案，注意跳出的条件，以及左边爬动时num的维护。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = INT_MAX;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> a[maxn],p,MIN=inf;</div><div class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; all;</div><div class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; showt;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;++i)&#123;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</div><div class="line">		all.insert(a[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> n=all.size();</div><div class="line">	<span class="keyword">int</span> left=<span class="number">0</span>,right=<span class="number">0</span>,num=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(;;)&#123;</div><div class="line">		<span class="keyword">while</span>(right&lt;p &amp;&amp; num&lt;n)&#123;</div><div class="line">			<span class="keyword">if</span>(showt[a[right++]]++ == <span class="number">0</span>)</div><div class="line">			++num;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(num&lt;n) <span class="keyword">break</span>;</div><div class="line">		MIN=min(MIN,right-left);</div><div class="line">		<span class="keyword">if</span>(--showt[a[left++]]==<span class="number">0</span>)</div><div class="line">		  num--;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,MIN);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="尺取法" scheme="http://yoursite.com/tags/%E5%B0%BA%E5%8F%96%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>POJ2689 Prime Distance - 埃拉托色尼筛法应用</title>
    <link href="http://yoursite.com/2017/04/30/POJ2689/"/>
    <id>http://yoursite.com/2017/04/30/POJ2689/</id>
    <published>2017-04-29T17:35:00.000Z</published>
    <updated>2017-04-29T17:47:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://poj.org/problem?id=2689" target="_blank" rel="external">http://poj.org/problem?id=2689</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>The branch of mathematics called number theory is about properties of numbers. One of the areas that has captured the interest of number theoreticians for thousands of years is the question of primality. A prime number is a number that is has no proper factors (it is only evenly divisible by 1 and itself). The first prime numbers are 2,3,5,7 but they quickly become less frequent. One of the interesting questions is how dense they are in various ranges. Adjacent primes are two numbers that are both primes, but there are no other prime numbers between the adjacent primes. For example, 2,3 are the only adjacent primes that are also adjacent numbers.<br>Your program is given 2 numbers: L and U (1&lt;=L&lt; U&lt;=2,147,483,647), and you are to find the two adjacent primes C1 and C2 (L&lt;=C1&lt; C2&lt;=U) that are closest (i.e. C2-C1 is the minimum). If there are other pairs that are the same distance apart, use the first pair. You are also to find the two adjacent primes D1 and D2 (L&lt;=D1&lt; D2&lt;=U) where D1 and D2 are as distant from each other as possible (again choosing the first pair if there is a tie).</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p> Each line of input will contain two positive integers, L and U, with L &lt; U. The difference between L and U will not exceed 1,000,000.</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>For each L and U, the output will either be the statement that there are no adjacent primes (because there are less than two primes between the two given numbers) or a line giving the two pairs of adjacent primes.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>2 17<br>14 17</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>2,3 are closest, 7,11 are most distant.<br>There are no adjacent primes.</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给出区间的上下界，求在这个区间之内距离最近的两个素数距离为多少和距离最远的两个素数距离为多少。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先注意到题目的范围非常大，打出完整的素数表必定会MLE，所以我们当然没必要打出整个素数表，现在我们知道与埃拉托色尼筛法有关的定理：<strong>如果n是一个合数，那么n一定有一个不超过sqrt(n)的素因子。</strong>那么运用这点我们知道只需要打出前5万个素数的表就可以解决问题了,因为sqrt(2^31)&lt;50000，我们可以运用表内的素数乘上k来判断在大区间中的某个数字是否属素数，如果n=k*prime在区间中，那么它一定不是素数。注意枚举素数的时候一定不能慢慢累加到对应的区间，因为当所求区间非常靠后的时候，第五万个素数距离它还是非常远的，累加的话会出现O(n^2)复杂度变得非常大的情况，显然我们可以用除法来进行加速，避免一系列不必要的枚举直接到目的区间。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = INT_MAX<span class="number">-1</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1</span>&lt;&lt;<span class="number">16</span>;</div><div class="line">ll u,l,maxl,maxr,minl,minr,num;</div><div class="line"><span class="keyword">bool</span> vis[maxn],is_prime[maxn*<span class="number">20</span>];</div><div class="line">ll prime[maxn],ans[maxn];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_prime_factor</span><span class="params">(<span class="keyword">int</span> n)</span></span></div><div class="line">&#123;</div><div class="line">	num=<span class="number">0</span>;</div><div class="line">	<span class="built_in">memset</span>(vis,<span class="literal">true</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">	vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="literal">false</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(vis[i]) &#123;</div><div class="line">			prime[num++]=i;</div><div class="line">			is_prime[i]=<span class="literal">true</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;num &amp;&amp; i*prime[j]&lt;n;j++)</div><div class="line">		&#123;</div><div class="line">			vis[i*prime[j]]=<span class="literal">false</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_prime</span><span class="params">(ll l,ll u)</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(is_prime,<span class="number">1</span>, <span class="keyword">sizeof</span>(is_prime));</div><div class="line">	<span class="keyword">int</span> mul;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;num &amp;&amp; prime[i]&lt;=u;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(l&gt;prime[i]) &#123;</div><div class="line">			ll temp = l - prime[i];</div><div class="line">			mul = temp / prime[i] ;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			mul=<span class="number">2</span>;</div><div class="line">		<span class="keyword">for</span>(ll j=mul*prime[i];j&lt;=u;j+=prime[i])&#123;</div><div class="line">			<span class="keyword">if</span>(j&gt;=l) &#123;</div><div class="line">				is_prime[j - l] = <span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	init_prime_factor(maxn);</div><div class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;l,&amp;u))&#123;</div><div class="line">		get_prime(l,u);</div><div class="line">		<span class="keyword">int</span> pnum=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(ll i=l;i&lt;=u;++i)&#123;</div><div class="line">			<span class="keyword">if</span>(is_prime[i-l])&#123;</div><div class="line">				<span class="keyword">if</span>(i==<span class="number">1</span>)</div><div class="line">					<span class="keyword">continue</span>;</div><div class="line">				ans[++pnum]=i;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		ll MIN=inf,MAX=-inf;</div><div class="line">		ll temp;</div><div class="line">		<span class="keyword">if</span>(pnum&lt;<span class="number">2</span>)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"There are no adjacent primes.\n"</span>);</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; pnum; ++i) &#123;</div><div class="line">				temp = ans[i + <span class="number">1</span>] - ans[i];</div><div class="line">				<span class="keyword">if</span> (temp &lt; MIN) &#123;</div><div class="line">					MIN = temp;</div><div class="line">					minl = ans[i];</div><div class="line">					minr = ans[i+<span class="number">1</span>];</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(temp &gt;MAX)&#123;</div><div class="line">					MAX=temp;</div><div class="line">					maxl=ans[i];</div><div class="line">					maxr=ans[i+<span class="number">1</span>];</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld,%lld are closest, %lld,%lld are most distant.\n"</span>,minl,minr,maxl,maxr);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2689&quot; target=&quot;_blank&quot; rel=&quot;
    
    </summary>
    
      <category term="数学" scheme="http://yoursite.com/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="筛法" scheme="http://yoursite.com/tags/%E7%AD%9B%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>POJ2262 Goldbach&#39;s Conjecture - 哥德巴赫猜想</title>
    <link href="http://yoursite.com/2017/04/30/POJ2262/"/>
    <id>http://yoursite.com/2017/04/30/POJ2262/</id>
    <published>2017-04-29T17:26:20.000Z</published>
    <updated>2017-04-29T17:34:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目连接"><a href="#题目连接" class="headerlink" title="题目连接"></a>题目连接</h2><p><a href="http://poj.org/problem?id=2262" target="_blank" rel="external">http://poj.org/problem?id=2262</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>In 1742, Christian Goldbach, a German amateur mathematician, sent a letter to Leonhard Euler in which he made the following conjecture:<br>Every even number greater than 4 can be<br>written as the sum of two odd prime numbers.</p>
<p>For example:<br>8 = 3 + 5. Both 3 and 5 are odd prime numbers.<br>20 = 3 + 17 = 7 + 13.<br>42 = 5 + 37 = 11 + 31 = 13 + 29 = 19 + 23.</p>
<p>Today it is still unproven whether the conjecture is right. (Oh wait, I have the proof of course, but it is too long to write it on the margin of this page.)<br>Anyway, your task is now to verify Goldbach’s conjecture for all even numbers less than a million. </p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>The input will contain one or more test cases.<br>Each test case consists of one even integer n with 6 &lt;= n &lt; 1000000.<br>Input will be terminated by a value of 0 for n.</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>For each test case, print one line of the form n = a + b, where a and b are odd primes. Numbers and operators should be separated by exactly one blank like in the sample output below. If there is more than one pair of odd primes adding up to n, choose the pair where the difference b - a is maximized. If there is no such pair, print a line saying “Goldbach’s conjecture is wrong.”</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>8<br>20<br>42<br>0</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>8 = 3 + 5<br>20 = 3 + 17<br>42 = 5 + 37</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>哥德巴赫猜想是一个著名的但是没有被准确证明的定理，其指出任意一个数字都可以表示为两个质数之和，给出n个数字，现在要求你把它拆分为两个素数的和，取两个素数只差最大的输出。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>从头开始枚举素数，当满足n-prime[i]也为素数的时候输出即可线性解决这个问题。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">4</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = INT_MAX;</div><div class="line"><span class="keyword">bool</span> vis[maxn];</div><div class="line"><span class="keyword">int</span> prime[maxn],n,num,is_prime[maxn];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_prime_factor</span><span class="params">(<span class="keyword">int</span> n)</span>   </span></div><div class="line">&#123;</div><div class="line">    num=<span class="number">0</span>;</div><div class="line">    <span class="built_in">memset</span>(vis,<span class="literal">true</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">    vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="literal">false</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(vis[i]) &#123;</div><div class="line">            prime[num++]=i;</div><div class="line">            is_prime[i]=<span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;num &amp;&amp; i*prime[j]&lt;n;j++)</div><div class="line">        &#123;</div><div class="line">            vis[i*prime[j]]=<span class="literal">false</span>;</div><div class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	init_prime_factor(maxn);</div><div class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n))&#123;</div><div class="line">		<span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">int</span> a,b;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;++i)&#123;</div><div class="line">			<span class="keyword">if</span>(is_prime[n-prime[i]])&#123;</div><div class="line">				a=prime[i];</div><div class="line">				b=n-prime[i];</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d = %d + %d\n"</span>,n,a,b);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目连接&quot;&gt;&lt;a href=&quot;#题目连接&quot; class=&quot;headerlink&quot; title=&quot;题目连接&quot;&gt;&lt;/a&gt;题目连接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2262&quot; target=&quot;_blank&quot; rel=&quot;
    
    </summary>
    
      <category term="数学" scheme="http://yoursite.com/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="素数" scheme="http://yoursite.com/tags/%E7%B4%A0%E6%95%B0/"/>
    
  </entry>
  
</feed>
